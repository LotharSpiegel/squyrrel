After init hook for Squyrrel: IConfigRegistry.connect_signals
After init hook for Squyrrel: IConfigRegistry.install_logging
Setup logging of Squyrrel methods..
Squyrrel.register_package('squyrrel')
	Register package/dir <squyrrel>..
	Squyrrel.get_full_package_path('squyrrel')
		-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel'

	Squyrrel._register_package_filter('squyrrel')
		-> (Squyrrel._register_package_filter) ->: True

	Successfully registered package/dir squyrrel
	Full path: c:\users\lothar\passion\squyrrel\squyrrel
	-> (Squyrrel.register_package) ->: PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel)

Squyrrel.load_package(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel))
	Squyrrel.inspect_directory(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel))
		-> (Squyrrel.inspect_directory) ->: (['cmds', 'conftest', 'main', 'manage', '__init__'], ['core', 'gui', 'ide', 'management', 'sql', '__pycache__'])

	is package (contains __init__.py): True
	Squyrrel._load_package_filter(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel))
		-> (Squyrrel._load_package_filter) ->: True

	Squyrrel.register_module(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel), module_name='cmds')
		Register module <cmds>..
		-> (Squyrrel.register_module) ->: ModuleMeta(package=squyrrel, module_name=cmds)

	Squyrrel.load_module(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel), module_name='cmds', load_classes=True)
		Load module <squyrrel.cmds>
		Squyrrel.load_module_classes(module_meta=ModuleMeta(package=squyrrel, module_name=cmds), imported_module=<module 'squyrrel.cmds' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\cmds.py'>)
			load classes of module squyrrel.cmds..
			loaded 0 classes in module module squyrrel.cmds
			-> (Squyrrel.load_module_classes) ->: None

		-> (Squyrrel.load_module) ->: None

	Squyrrel.register_module(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel), module_name='conftest')
		Register module <conftest>..
		-> (Squyrrel.register_module) ->: ModuleMeta(package=squyrrel, module_name=conftest)

	Squyrrel.load_module(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel), module_name='conftest', load_classes=True)
		Load module <squyrrel.conftest>
		Squyrrel.load_module_classes(module_meta=ModuleMeta(package=squyrrel, module_name=conftest), imported_module=<module 'squyrrel.conftest' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\conftest.py'>)
			load classes of module squyrrel.conftest..
			loaded 0 classes in module module squyrrel.conftest
			-> (Squyrrel.load_module_classes) ->: None

		-> (Squyrrel.load_module) ->: None

	Squyrrel.register_module(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel), module_name='main')
		Register module <main>..
		-> (Squyrrel.register_module) ->: ModuleMeta(package=squyrrel, module_name=main)

	Squyrrel.load_module(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel), module_name='main', load_classes=True)
		Load module <squyrrel.main>
		Squyrrel.load_module_classes(module_meta=ModuleMeta(package=squyrrel, module_name=main), imported_module=<module 'squyrrel.main' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\main.py'>)
			load classes of module squyrrel.main..
			Squyrrel.load_class(ModuleMeta(package=squyrrel, module_name=main), 'App', <class 'squyrrel.main.App'>)
				add class App
				-> (Squyrrel.load_class) ->: None

			loaded 1 classes in module module squyrrel.main
			-> (Squyrrel.load_module_classes) ->: None

		-> (Squyrrel.load_module) ->: None

	Squyrrel.register_module(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel), module_name='manage')
		Register module <manage>..
		-> (Squyrrel.register_module) ->: ModuleMeta(package=squyrrel, module_name=manage)

	Squyrrel.load_module(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel), module_name='manage', load_classes=True)
		Load module <squyrrel.manage>
		Squyrrel.load_module_classes(module_meta=ModuleMeta(package=squyrrel, module_name=manage), imported_module=<module 'squyrrel.manage' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\manage.py'>)
			load classes of module squyrrel.manage..
			loaded 0 classes in module module squyrrel.manage
			-> (Squyrrel.load_module_classes) ->: None

		-> (Squyrrel.load_module) ->: None

	Squyrrel.register_module(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel), module_name='__init__')
		Register module <__init__>..
		-> (Squyrrel.register_module) ->: ModuleMeta(package=squyrrel, module_name=__init__)

	Squyrrel.load_module(PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel), module_name='__init__', load_classes=True)
		Load module <squyrrel.__init__>
		Squyrrel.load_module_classes(module_meta=ModuleMeta(package=squyrrel, module_name=__init__), imported_module=<module 'squyrrel.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\__init__.py'>)
			load classes of module squyrrel.__init__..
			loaded 0 classes in module module squyrrel.__init__
			-> (Squyrrel.load_module_classes) ->: None

		-> (Squyrrel.load_module) ->: None

	Inspecting subdir core ..
	Squyrrel.register_package('squyrrel\\core')
		Register package/dir <squyrrel\core>..
		Squyrrel.get_full_package_path('squyrrel\\core')
			-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core'

		Squyrrel._register_package_filter('core')
			-> (Squyrrel._register_package_filter) ->: True

		Successfully registered package/dir core
		Full path: c:\users\lothar\passion\squyrrel\squyrrel\core
		-> (Squyrrel.register_package) ->: PackageMeta(package_name=core, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core, relative_path=squyrrel\core, import_string=squyrrel.core)

	Squyrrel.load_package(PackageMeta(package_name=core, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core, relative_path=squyrrel\core, import_string=squyrrel.core), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
		Squyrrel.inspect_directory(PackageMeta(package_name=core, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core, relative_path=squyrrel\core, import_string=squyrrel.core))
			-> (Squyrrel.inspect_directory) ->: (['__init__'], ['config', 'context', 'logging', 'registry', 'signals', 'utils', '__pycache__'])

		is package (contains __init__.py): True
		Squyrrel._load_package_filter(PackageMeta(package_name=core, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core, relative_path=squyrrel\core, import_string=squyrrel.core))
			-> (Squyrrel._load_package_filter) ->: True

		Squyrrel.register_module(PackageMeta(package_name=core, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core, relative_path=squyrrel\core, import_string=squyrrel.core), module_name='__init__')
			Register module <__init__>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=core, module_name=__init__)

		Squyrrel.load_module(PackageMeta(package_name=core, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core, relative_path=squyrrel\core, import_string=squyrrel.core), module_name='__init__', load_classes=True)
			Load module <squyrrel.core.__init__>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=core, module_name=__init__), imported_module=<module 'squyrrel.core.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\__init__.py'>)
				load classes of module squyrrel.core.__init__..
				loaded 0 classes in module module squyrrel.core.__init__
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Inspecting subdir config ..
		Squyrrel.register_package('squyrrel\\core\\config')
			Register package/dir <squyrrel\core\config>..
			Squyrrel.get_full_package_path('squyrrel\\core\\config')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\config'

			Squyrrel._register_package_filter('config')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir config
			Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\config
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=config, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config, relative_path=squyrrel\core\config, import_string=squyrrel.core.config)

		Squyrrel.load_package(PackageMeta(package_name=config, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config, relative_path=squyrrel\core\config, import_string=squyrrel.core.config), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=config, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config, relative_path=squyrrel\core\config, import_string=squyrrel.core.config))
				-> (Squyrrel.inspect_directory) ->: (['base', 'decorators', '__init__'], ['__pycache__'])

			is package (contains __init__.py): True
			Squyrrel._load_package_filter(PackageMeta(package_name=config, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config, relative_path=squyrrel\core\config, import_string=squyrrel.core.config))
				-> (Squyrrel._load_package_filter) ->: True

			Squyrrel.register_module(PackageMeta(package_name=config, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config, relative_path=squyrrel\core\config, import_string=squyrrel.core.config), module_name='base')
				Register module <base>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=config, module_name=base)

			Squyrrel.load_module(PackageMeta(package_name=config, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config, relative_path=squyrrel\core\config, import_string=squyrrel.core.config), module_name='base', load_classes=True)
				Load module <squyrrel.core.config.base>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=config, module_name=base), imported_module=<module 'squyrrel.core.config.base' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\config\\base.py'>)
					load classes of module squyrrel.core.config.base..
					Squyrrel.load_class(ModuleMeta(package=config, module_name=base), 'ConfigRegistry', <class 'squyrrel.core.config.base.ConfigRegistry'>)
						add class ConfigRegistry
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=config, module_name=base), 'IConfig', <class 'squyrrel.core.config.base.IConfig'>)
						add class IConfig
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=config, module_name=base), 'IConfigRegistry', <class 'squyrrel.core.config.base.IConfigRegistry'>)
						add class IConfigRegistry
						-> (Squyrrel.load_class) ->: None

					loaded 3 classes in module module squyrrel.core.config.base
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=config, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config, relative_path=squyrrel\core\config, import_string=squyrrel.core.config), module_name='decorators')
				Register module <decorators>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=config, module_name=decorators)

			Squyrrel.load_module(PackageMeta(package_name=config, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config, relative_path=squyrrel\core\config, import_string=squyrrel.core.config), module_name='decorators', load_classes=True)
				Load module <squyrrel.core.config.decorators>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=config, module_name=decorators), imported_module=<module 'squyrrel.core.config.decorators' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\config\\decorators.py'>)
					load classes of module squyrrel.core.config.decorators..
					Squyrrel.load_class(ModuleMeta(package=config, module_name=decorators), 'hook', <class 'squyrrel.core.config.decorators.hook'>)
						add class hook
						-> (Squyrrel.load_class) ->: None

					loaded 1 classes in module module squyrrel.core.config.decorators
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=config, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config, relative_path=squyrrel\core\config, import_string=squyrrel.core.config), module_name='__init__')
				Register module <__init__>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=config, module_name=__init__)

			Squyrrel.load_module(PackageMeta(package_name=config, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config, relative_path=squyrrel\core\config, import_string=squyrrel.core.config), module_name='__init__', load_classes=True)
				Load module <squyrrel.core.config.__init__>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=config, module_name=__init__), imported_module=<module 'squyrrel.core.config.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\config\\__init__.py'>)
					load classes of module squyrrel.core.config.__init__..
					loaded 0 classes in module module squyrrel.core.config.__init__
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Inspecting subdir __pycache__ ..
			Squyrrel.register_package('squyrrel\\core\\config\\__pycache__')
				Register package/dir <squyrrel\core\config\__pycache__>..
				Squyrrel.get_full_package_path('squyrrel\\core\\config\\__pycache__')
					-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\config\\__pycache__'

				Squyrrel._register_package_filter('__pycache__')
					-> (Squyrrel._register_package_filter) ->: True

				Successfully registered package/dir __pycache__
				Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\config\__pycache__
				-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config\__pycache__, relative_path=squyrrel\core\config\__pycache__, import_string=squyrrel.core.config.__pycache__)

			Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config\__pycache__, relative_path=squyrrel\core\config\__pycache__, import_string=squyrrel.core.config.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
				Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config\__pycache__, relative_path=squyrrel\core\config\__pycache__, import_string=squyrrel.core.config.__pycache__))
					-> (Squyrrel.inspect_directory) ->: ([], [])

				is package (contains __init__.py): False
				Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config\__pycache__, relative_path=squyrrel\core\config\__pycache__, import_string=squyrrel.core.config.__pycache__))
					-> (Squyrrel._load_package_filter) ->: True

				-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config\__pycache__, relative_path=squyrrel\core\config\__pycache__, import_string=squyrrel.core.config.__pycache__)

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=config, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\config, relative_path=squyrrel\core\config, import_string=squyrrel.core.config)

		Add subpackage config to package core
		Inspecting subdir context ..
		Squyrrel.register_package('squyrrel\\core\\context')
			Register package/dir <squyrrel\core\context>..
			Squyrrel.get_full_package_path('squyrrel\\core\\context')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\context'

			Squyrrel._register_package_filter('context')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir context
			Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\context
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=context, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\context, relative_path=squyrrel\core\context, import_string=squyrrel.core.context)

		Squyrrel.load_package(PackageMeta(package_name=context, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\context, relative_path=squyrrel\core\context, import_string=squyrrel.core.context), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=context, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\context, relative_path=squyrrel\core\context, import_string=squyrrel.core.context))
				-> (Squyrrel.inspect_directory) ->: (['__init__'], ['__pycache__'])

			is package (contains __init__.py): True
			Squyrrel._load_package_filter(PackageMeta(package_name=context, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\context, relative_path=squyrrel\core\context, import_string=squyrrel.core.context))
				-> (Squyrrel._load_package_filter) ->: True

			Squyrrel.register_module(PackageMeta(package_name=context, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\context, relative_path=squyrrel\core\context, import_string=squyrrel.core.context), module_name='__init__')
				Register module <__init__>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=context, module_name=__init__)

			Squyrrel.load_module(PackageMeta(package_name=context, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\context, relative_path=squyrrel\core\context, import_string=squyrrel.core.context), module_name='__init__', load_classes=True)
				Load module <squyrrel.core.context.__init__>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=context, module_name=__init__), imported_module=<module 'squyrrel.core.context.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\context\\__init__.py'>)
					load classes of module squyrrel.core.context.__init__..
					Squyrrel.load_class(ModuleMeta(package=context, module_name=__init__), 'Context', <class 'squyrrel.core.context.__init__.Context'>)
						add class Context
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=context, module_name=__init__), 'ContextDict', <class 'squyrrel.core.context.__init__.ContextDict'>)
						add class ContextDict
						-> (Squyrrel.load_class) ->: None

					loaded 2 classes in module module squyrrel.core.context.__init__
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Inspecting subdir __pycache__ ..
			Squyrrel.register_package('squyrrel\\core\\context\\__pycache__')
				Register package/dir <squyrrel\core\context\__pycache__>..
				Squyrrel.get_full_package_path('squyrrel\\core\\context\\__pycache__')
					-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\context\\__pycache__'

				Squyrrel._register_package_filter('__pycache__')
					-> (Squyrrel._register_package_filter) ->: True

				Successfully registered package/dir __pycache__
				Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\context\__pycache__
				-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\context\__pycache__, relative_path=squyrrel\core\context\__pycache__, import_string=squyrrel.core.context.__pycache__)

			Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\context\__pycache__, relative_path=squyrrel\core\context\__pycache__, import_string=squyrrel.core.context.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
				Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\context\__pycache__, relative_path=squyrrel\core\context\__pycache__, import_string=squyrrel.core.context.__pycache__))
					-> (Squyrrel.inspect_directory) ->: ([], [])

				is package (contains __init__.py): False
				Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\context\__pycache__, relative_path=squyrrel\core\context\__pycache__, import_string=squyrrel.core.context.__pycache__))
					-> (Squyrrel._load_package_filter) ->: True

				-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\context\__pycache__, relative_path=squyrrel\core\context\__pycache__, import_string=squyrrel.core.context.__pycache__)

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=context, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\context, relative_path=squyrrel\core\context, import_string=squyrrel.core.context)

		Add subpackage context to package core
		Inspecting subdir logging ..
		Squyrrel.register_package('squyrrel\\core\\logging')
			Register package/dir <squyrrel\core\logging>..
			Squyrrel.get_full_package_path('squyrrel\\core\\logging')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\logging'

			Squyrrel._register_package_filter('logging')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir logging
			Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\logging
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging)

		Squyrrel.load_package(PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging))
				-> (Squyrrel.inspect_directory) ->: (['logger', 'signals', 'utils', '__init__'], ['__pycache__'])

			is package (contains __init__.py): True
			Squyrrel._load_package_filter(PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging))
				-> (Squyrrel._load_package_filter) ->: True

			Squyrrel.register_module(PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging), module_name='logger')
				Register module <logger>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=logging, module_name=logger)

			Squyrrel.load_module(PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging), module_name='logger', load_classes=True)
				Load module <squyrrel.core.logging.logger>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=logging, module_name=logger), imported_module=<module 'squyrrel.core.logging.logger' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\logging\\logger.py'>)
					load classes of module squyrrel.core.logging.logger..
					loaded 0 classes in module module squyrrel.core.logging.logger
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging), module_name='signals')
				Register module <signals>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=logging, module_name=signals)

			Squyrrel.load_module(PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging), module_name='signals', load_classes=True)
				Load module <squyrrel.core.logging.signals>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=logging, module_name=signals), imported_module=<module 'squyrrel.core.logging.signals' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\logging\\signals.py'>)
					load classes of module squyrrel.core.logging.signals..
					loaded 0 classes in module module squyrrel.core.logging.signals
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging), module_name='utils')
				Register module <utils>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=logging, module_name=utils)

			Squyrrel.load_module(PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging), module_name='utils', load_classes=True)
				Load module <squyrrel.core.logging.utils>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=logging, module_name=utils), imported_module=<module 'squyrrel.core.logging.utils' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\logging\\utils.py'>)
					load classes of module squyrrel.core.logging.utils..
					loaded 0 classes in module module squyrrel.core.logging.utils
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging), module_name='__init__')
				Register module <__init__>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=logging, module_name=__init__)

			Squyrrel.load_module(PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging), module_name='__init__', load_classes=True)
				Load module <squyrrel.core.logging.__init__>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=logging, module_name=__init__), imported_module=<module 'squyrrel.core.logging.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\logging\\__init__.py'>)
					load classes of module squyrrel.core.logging.__init__..
					loaded 0 classes in module module squyrrel.core.logging.__init__
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Inspecting subdir __pycache__ ..
			Squyrrel.register_package('squyrrel\\core\\logging\\__pycache__')
				Register package/dir <squyrrel\core\logging\__pycache__>..
				Squyrrel.get_full_package_path('squyrrel\\core\\logging\\__pycache__')
					-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\logging\\__pycache__'

				Squyrrel._register_package_filter('__pycache__')
					-> (Squyrrel._register_package_filter) ->: True

				Successfully registered package/dir __pycache__
				Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\logging\__pycache__
				-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging\__pycache__, relative_path=squyrrel\core\logging\__pycache__, import_string=squyrrel.core.logging.__pycache__)

			Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging\__pycache__, relative_path=squyrrel\core\logging\__pycache__, import_string=squyrrel.core.logging.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
				Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging\__pycache__, relative_path=squyrrel\core\logging\__pycache__, import_string=squyrrel.core.logging.__pycache__))
					-> (Squyrrel.inspect_directory) ->: ([], [])

				is package (contains __init__.py): False
				Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging\__pycache__, relative_path=squyrrel\core\logging\__pycache__, import_string=squyrrel.core.logging.__pycache__))
					-> (Squyrrel._load_package_filter) ->: True

				-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging\__pycache__, relative_path=squyrrel\core\logging\__pycache__, import_string=squyrrel.core.logging.__pycache__)

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=logging, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\logging, relative_path=squyrrel\core\logging, import_string=squyrrel.core.logging)

		Add subpackage logging to package core
		Inspecting subdir registry ..
		Squyrrel.register_package('squyrrel\\core\\registry')
			Register package/dir <squyrrel\core\registry>..
			Squyrrel.get_full_package_path('squyrrel\\core\\registry')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\registry'

			Squyrrel._register_package_filter('registry')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir registry
			Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\registry
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry)

		Squyrrel.load_package(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry))
				-> (Squyrrel.inspect_directory) ->: (['config', 'exceptions', 'exception_handler', 'logging', 'meta', 'nutcracker', 'signals', '__init__'], ['__pycache__'])

			is package (contains __init__.py): True
			Squyrrel._load_package_filter(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry))
				-> (Squyrrel._load_package_filter) ->: True

			Squyrrel.register_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='config')
				Register module <config>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=registry, module_name=config)

			Squyrrel.load_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='config', load_classes=True)
				Load module <squyrrel.core.registry.config>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=registry, module_name=config), imported_module=<module 'squyrrel.core.registry.config' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\registry\\config.py'>)
					load classes of module squyrrel.core.registry.config..
					Squyrrel.load_class(ModuleMeta(package=registry, module_name=config), 'SquyrrelDefaultConfig', <class 'squyrrel.core.registry.config.SquyrrelDefaultConfig'>)
						add class SquyrrelDefaultConfig
						-> (Squyrrel.load_class) ->: None

					loaded 1 classes in module module squyrrel.core.registry.config
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='exceptions')
				Register module <exceptions>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=registry, module_name=exceptions)

			Squyrrel.load_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='exceptions', load_classes=True)
				Load module <squyrrel.core.registry.exceptions>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=registry, module_name=exceptions), imported_module=<module 'squyrrel.core.registry.exceptions' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\registry\\exceptions.py'>)
					load classes of module squyrrel.core.registry.exceptions..
					Squyrrel.load_class(ModuleMeta(package=registry, module_name=exceptions), 'ClassNotFoundException', <class 'squyrrel.core.registry.exceptions.ClassNotFoundException'>)
						add class ClassNotFoundException
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=registry, module_name=exceptions), 'ModuleNotFoundException', <class 'squyrrel.core.registry.exceptions.ModuleNotFoundException'>)
						add class ModuleNotFoundException
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=registry, module_name=exceptions), 'ModuleNotRegisteredException', <class 'squyrrel.core.registry.exceptions.ModuleNotRegisteredException'>)
						add class ModuleNotRegisteredException
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=registry, module_name=exceptions), 'ModuleRottenException', <class 'squyrrel.core.registry.exceptions.ModuleRottenException'>)
						add class ModuleRottenException
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=registry, module_name=exceptions), 'PackageNotFoundException', <class 'squyrrel.core.registry.exceptions.PackageNotFoundException'>)
						add class PackageNotFoundException
						-> (Squyrrel.load_class) ->: None

					loaded 5 classes in module module squyrrel.core.registry.exceptions
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='exception_handler')
				Register module <exception_handler>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=registry, module_name=exception_handler)

			Squyrrel.load_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='exception_handler', load_classes=True)
				Load module <squyrrel.core.registry.exception_handler>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=registry, module_name=exception_handler), imported_module=<module 'squyrrel.core.registry.exception_handler' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\registry\\exception_handler.py'>)
					load classes of module squyrrel.core.registry.exception_handler..
					Squyrrel.load_class(ModuleMeta(package=registry, module_name=exception_handler), 'ExceptionHandler', <class 'squyrrel.core.registry.exception_handler.ExceptionHandler'>)
						add class ExceptionHandler
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=registry, module_name=exception_handler), 'ModuleImportExceptionHandler', <class 'squyrrel.core.registry.exception_handler.ModuleImportExceptionHandler'>)
						add class ModuleImportExceptionHandler
						-> (Squyrrel.load_class) ->: None

					loaded 2 classes in module module squyrrel.core.registry.exception_handler
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='logging')
				Register module <logging>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=registry, module_name=logging)

			Squyrrel.load_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='logging', load_classes=True)
				Load module <squyrrel.core.registry.logging>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=registry, module_name=logging), imported_module=<module 'squyrrel.core.registry.logging' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\registry\\logging.py'>)
					load classes of module squyrrel.core.registry.logging..
					loaded 0 classes in module module squyrrel.core.registry.logging
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='meta')
				Register module <meta>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=registry, module_name=meta)

			Squyrrel.load_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='meta', load_classes=True)
				Load module <squyrrel.core.registry.meta>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=registry, module_name=meta), imported_module=<module 'squyrrel.core.registry.meta' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\registry\\meta.py'>)
					load classes of module squyrrel.core.registry.meta..
					Squyrrel.load_class(ModuleMeta(package=registry, module_name=meta), 'ClassMeta', <class 'squyrrel.core.registry.meta.ClassMeta'>)
						add class ClassMeta
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=registry, module_name=meta), 'ModuleMeta', <class 'squyrrel.core.registry.meta.ModuleMeta'>)
						add class ModuleMeta
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=registry, module_name=meta), 'PackageMeta', <class 'squyrrel.core.registry.meta.PackageMeta'>)
						add class PackageMeta
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=registry, module_name=meta), 'PythonContext', <class 'squyrrel.core.registry.meta.PythonContext'>)
						add class PythonContext
						-> (Squyrrel.load_class) ->: None

					loaded 4 classes in module module squyrrel.core.registry.meta
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='nutcracker')
				Register module <nutcracker>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=registry, module_name=nutcracker)

			Squyrrel.load_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='nutcracker', load_classes=True)
				Load module <squyrrel.core.registry.nutcracker>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=registry, module_name=nutcracker), imported_module=<module 'squyrrel.core.registry.nutcracker' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\registry\\nutcracker.py'>)
					load classes of module squyrrel.core.registry.nutcracker..
					Squyrrel.load_class(ModuleMeta(package=registry, module_name=nutcracker), 'Squyrrel', <class 'squyrrel.core.registry.nutcracker.Squyrrel'>)
						add class Squyrrel
						-> (Squyrrel.load_class) ->: None

					loaded 1 classes in module module squyrrel.core.registry.nutcracker
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='signals')
				Register module <signals>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=registry, module_name=signals)

			Squyrrel.load_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='signals', load_classes=True)
				Load module <squyrrel.core.registry.signals>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=registry, module_name=signals), imported_module=<module 'squyrrel.core.registry.signals' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\registry\\signals.py'>)
					load classes of module squyrrel.core.registry.signals..
					loaded 0 classes in module module squyrrel.core.registry.signals
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='__init__')
				Register module <__init__>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=registry, module_name=__init__)

			Squyrrel.load_module(PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry), module_name='__init__', load_classes=True)
				Load module <squyrrel.core.registry.__init__>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=registry, module_name=__init__), imported_module=<module 'squyrrel.core.registry.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\registry\\__init__.py'>)
					load classes of module squyrrel.core.registry.__init__..
					loaded 0 classes in module module squyrrel.core.registry.__init__
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Inspecting subdir __pycache__ ..
			Squyrrel.register_package('squyrrel\\core\\registry\\__pycache__')
				Register package/dir <squyrrel\core\registry\__pycache__>..
				Squyrrel.get_full_package_path('squyrrel\\core\\registry\\__pycache__')
					-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\registry\\__pycache__'

				Squyrrel._register_package_filter('__pycache__')
					-> (Squyrrel._register_package_filter) ->: True

				Successfully registered package/dir __pycache__
				Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\registry\__pycache__
				-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry\__pycache__, relative_path=squyrrel\core\registry\__pycache__, import_string=squyrrel.core.registry.__pycache__)

			Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry\__pycache__, relative_path=squyrrel\core\registry\__pycache__, import_string=squyrrel.core.registry.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
				Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry\__pycache__, relative_path=squyrrel\core\registry\__pycache__, import_string=squyrrel.core.registry.__pycache__))
					-> (Squyrrel.inspect_directory) ->: ([], [])

				is package (contains __init__.py): False
				Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry\__pycache__, relative_path=squyrrel\core\registry\__pycache__, import_string=squyrrel.core.registry.__pycache__))
					-> (Squyrrel._load_package_filter) ->: True

				-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry\__pycache__, relative_path=squyrrel\core\registry\__pycache__, import_string=squyrrel.core.registry.__pycache__)

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=registry, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\registry, relative_path=squyrrel\core\registry, import_string=squyrrel.core.registry)

		Add subpackage registry to package core
		Inspecting subdir signals ..
		Squyrrel.register_package('squyrrel\\core\\signals')
			Register package/dir <squyrrel\core\signals>..
			Squyrrel.get_full_package_path('squyrrel\\core\\signals')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\signals'

			Squyrrel._register_package_filter('signals')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir signals
			Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\signals
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=signals, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals, relative_path=squyrrel\core\signals, import_string=squyrrel.core.signals)

		Squyrrel.load_package(PackageMeta(package_name=signals, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals, relative_path=squyrrel\core\signals, import_string=squyrrel.core.signals), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=signals, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals, relative_path=squyrrel\core\signals, import_string=squyrrel.core.signals))
				-> (Squyrrel.inspect_directory) ->: (['base', '__init__'], ['__pycache__'])

			is package (contains __init__.py): True
			Squyrrel._load_package_filter(PackageMeta(package_name=signals, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals, relative_path=squyrrel\core\signals, import_string=squyrrel.core.signals))
				-> (Squyrrel._load_package_filter) ->: True

			Squyrrel.register_module(PackageMeta(package_name=signals, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals, relative_path=squyrrel\core\signals, import_string=squyrrel.core.signals), module_name='base')
				Register module <base>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=signals, module_name=base)

			Squyrrel.load_module(PackageMeta(package_name=signals, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals, relative_path=squyrrel\core\signals, import_string=squyrrel.core.signals), module_name='base', load_classes=True)
				Load module <squyrrel.core.signals.base>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=signals, module_name=base), imported_module=<module 'squyrrel.core.signals.base' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\signals\\base.py'>)
					load classes of module squyrrel.core.signals.base..
					Squyrrel.load_class(ModuleMeta(package=signals, module_name=base), 'Signal', <class 'squyrrel.core.signals.base.Signal'>)
						add class Signal
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=signals, module_name=base), 'SignalCache', <class 'squyrrel.core.signals.base.SignalCache'>)
						add class SignalCache
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=signals, module_name=base), 'SignalFreeze', <class 'squyrrel.core.signals.base.SignalFreeze'>)
						add class SignalFreeze
						-> (Squyrrel.load_class) ->: None

					loaded 3 classes in module module squyrrel.core.signals.base
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=signals, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals, relative_path=squyrrel\core\signals, import_string=squyrrel.core.signals), module_name='__init__')
				Register module <__init__>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=signals, module_name=__init__)

			Squyrrel.load_module(PackageMeta(package_name=signals, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals, relative_path=squyrrel\core\signals, import_string=squyrrel.core.signals), module_name='__init__', load_classes=True)
				Load module <squyrrel.core.signals.__init__>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=signals, module_name=__init__), imported_module=<module 'squyrrel.core.signals.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\signals\\__init__.py'>)
					load classes of module squyrrel.core.signals.__init__..
					loaded 0 classes in module module squyrrel.core.signals.__init__
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Inspecting subdir __pycache__ ..
			Squyrrel.register_package('squyrrel\\core\\signals\\__pycache__')
				Register package/dir <squyrrel\core\signals\__pycache__>..
				Squyrrel.get_full_package_path('squyrrel\\core\\signals\\__pycache__')
					-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\signals\\__pycache__'

				Squyrrel._register_package_filter('__pycache__')
					-> (Squyrrel._register_package_filter) ->: True

				Successfully registered package/dir __pycache__
				Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\signals\__pycache__
				-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals\__pycache__, relative_path=squyrrel\core\signals\__pycache__, import_string=squyrrel.core.signals.__pycache__)

			Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals\__pycache__, relative_path=squyrrel\core\signals\__pycache__, import_string=squyrrel.core.signals.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
				Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals\__pycache__, relative_path=squyrrel\core\signals\__pycache__, import_string=squyrrel.core.signals.__pycache__))
					-> (Squyrrel.inspect_directory) ->: ([], [])

				is package (contains __init__.py): False
				Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals\__pycache__, relative_path=squyrrel\core\signals\__pycache__, import_string=squyrrel.core.signals.__pycache__))
					-> (Squyrrel._load_package_filter) ->: True

				-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals\__pycache__, relative_path=squyrrel\core\signals\__pycache__, import_string=squyrrel.core.signals.__pycache__)

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=signals, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\signals, relative_path=squyrrel\core\signals, import_string=squyrrel.core.signals)

		Add subpackage signals to package core
		Inspecting subdir utils ..
		Squyrrel.register_package('squyrrel\\core\\utils')
			Register package/dir <squyrrel\core\utils>..
			Squyrrel.get_full_package_path('squyrrel\\core\\utils')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\utils'

			Squyrrel._register_package_filter('utils')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir utils
			Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\utils
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=utils, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils, relative_path=squyrrel\core\utils, import_string=squyrrel.core.utils)

		Squyrrel.load_package(PackageMeta(package_name=utils, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils, relative_path=squyrrel\core\utils, import_string=squyrrel.core.utils), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=utils, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils, relative_path=squyrrel\core\utils, import_string=squyrrel.core.utils))
				-> (Squyrrel.inspect_directory) ->: (['paths', 'singleton', '__init__'], ['__pycache__'])

			is package (contains __init__.py): True
			Squyrrel._load_package_filter(PackageMeta(package_name=utils, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils, relative_path=squyrrel\core\utils, import_string=squyrrel.core.utils))
				-> (Squyrrel._load_package_filter) ->: True

			Squyrrel.register_module(PackageMeta(package_name=utils, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils, relative_path=squyrrel\core\utils, import_string=squyrrel.core.utils), module_name='paths')
				Register module <paths>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=utils, module_name=paths)

			Squyrrel.load_module(PackageMeta(package_name=utils, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils, relative_path=squyrrel\core\utils, import_string=squyrrel.core.utils), module_name='paths', load_classes=True)
				Load module <squyrrel.core.utils.paths>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=utils, module_name=paths), imported_module=<module 'squyrrel.core.utils.paths' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\utils\\paths.py'>)
					load classes of module squyrrel.core.utils.paths..
					loaded 0 classes in module module squyrrel.core.utils.paths
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=utils, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils, relative_path=squyrrel\core\utils, import_string=squyrrel.core.utils), module_name='singleton')
				Register module <singleton>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=utils, module_name=singleton)

			Squyrrel.load_module(PackageMeta(package_name=utils, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils, relative_path=squyrrel\core\utils, import_string=squyrrel.core.utils), module_name='singleton', load_classes=True)
				Load module <squyrrel.core.utils.singleton>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=utils, module_name=singleton), imported_module=<module 'squyrrel.core.utils.singleton' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\utils\\singleton.py'>)
					load classes of module squyrrel.core.utils.singleton..
					Squyrrel.load_class(ModuleMeta(package=utils, module_name=singleton), 'Singleton', <class 'squyrrel.core.utils.singleton.Singleton'>)
						add class Singleton
						-> (Squyrrel.load_class) ->: None

					loaded 1 classes in module module squyrrel.core.utils.singleton
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=utils, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils, relative_path=squyrrel\core\utils, import_string=squyrrel.core.utils), module_name='__init__')
				Register module <__init__>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=utils, module_name=__init__)

			Squyrrel.load_module(PackageMeta(package_name=utils, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils, relative_path=squyrrel\core\utils, import_string=squyrrel.core.utils), module_name='__init__', load_classes=True)
				Load module <squyrrel.core.utils.__init__>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=utils, module_name=__init__), imported_module=<module 'squyrrel.core.utils.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\utils\\__init__.py'>)
					load classes of module squyrrel.core.utils.__init__..
					loaded 0 classes in module module squyrrel.core.utils.__init__
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Inspecting subdir __pycache__ ..
			Squyrrel.register_package('squyrrel\\core\\utils\\__pycache__')
				Register package/dir <squyrrel\core\utils\__pycache__>..
				Squyrrel.get_full_package_path('squyrrel\\core\\utils\\__pycache__')
					-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\utils\\__pycache__'

				Squyrrel._register_package_filter('__pycache__')
					-> (Squyrrel._register_package_filter) ->: True

				Successfully registered package/dir __pycache__
				Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\utils\__pycache__
				-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils\__pycache__, relative_path=squyrrel\core\utils\__pycache__, import_string=squyrrel.core.utils.__pycache__)

			Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils\__pycache__, relative_path=squyrrel\core\utils\__pycache__, import_string=squyrrel.core.utils.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
				Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils\__pycache__, relative_path=squyrrel\core\utils\__pycache__, import_string=squyrrel.core.utils.__pycache__))
					-> (Squyrrel.inspect_directory) ->: ([], [])

				is package (contains __init__.py): False
				Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils\__pycache__, relative_path=squyrrel\core\utils\__pycache__, import_string=squyrrel.core.utils.__pycache__))
					-> (Squyrrel._load_package_filter) ->: True

				-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils\__pycache__, relative_path=squyrrel\core\utils\__pycache__, import_string=squyrrel.core.utils.__pycache__)

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=utils, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\utils, relative_path=squyrrel\core\utils, import_string=squyrrel.core.utils)

		Add subpackage utils to package core
		Inspecting subdir __pycache__ ..
		Squyrrel.register_package('squyrrel\\core\\__pycache__')
			Register package/dir <squyrrel\core\__pycache__>..
			Squyrrel.get_full_package_path('squyrrel\\core\\__pycache__')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\core\\__pycache__'

			Squyrrel._register_package_filter('__pycache__')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir __pycache__
			Full path: c:\users\lothar\passion\squyrrel\squyrrel\core\__pycache__
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\__pycache__, relative_path=squyrrel\core\__pycache__, import_string=squyrrel.core.__pycache__)

		Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\__pycache__, relative_path=squyrrel\core\__pycache__, import_string=squyrrel.core.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\__pycache__, relative_path=squyrrel\core\__pycache__, import_string=squyrrel.core.__pycache__))
				-> (Squyrrel.inspect_directory) ->: ([], [])

			is package (contains __init__.py): False
			Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\__pycache__, relative_path=squyrrel\core\__pycache__, import_string=squyrrel.core.__pycache__))
				-> (Squyrrel._load_package_filter) ->: True

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core\__pycache__, relative_path=squyrrel\core\__pycache__, import_string=squyrrel.core.__pycache__)

		-> (Squyrrel.load_package) ->: PackageMeta(package_name=core, package_path=c:\users\lothar\passion\squyrrel\squyrrel\core, relative_path=squyrrel\core, import_string=squyrrel.core)

	Add subpackage core to package squyrrel
	Inspecting subdir gui ..
	Squyrrel.register_package('squyrrel\\gui')
		Register package/dir <squyrrel\gui>..
		Squyrrel.get_full_package_path('squyrrel\\gui')
			-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\gui'

		Squyrrel._register_package_filter('gui')
			-> (Squyrrel._register_package_filter) ->: False

		Package gui did not pass filter
		-> (Squyrrel.register_package) ->: PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel\gui, relative_path=squyrrel\gui, import_string=squyrrel.gui)

	Inspecting subdir ide ..
	Squyrrel.register_package('squyrrel\\ide')
		Register package/dir <squyrrel\ide>..
		Squyrrel.get_full_package_path('squyrrel\\ide')
			-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\ide'

		Squyrrel._register_package_filter('ide')
			-> (Squyrrel._register_package_filter) ->: True

		Successfully registered package/dir ide
		Full path: c:\users\lothar\passion\squyrrel\squyrrel\ide
		-> (Squyrrel.register_package) ->: PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide)

	Squyrrel.load_package(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
		Squyrrel.inspect_directory(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide))
			-> (Squyrrel.inspect_directory) ->: (['gui', 'log_window', 'main', 'shell', 'shell_window', 'windows', '__init__'], ['__pycache__'])

		is package (contains __init__.py): True
		Squyrrel._load_package_filter(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide))
			-> (Squyrrel._load_package_filter) ->: True

		Squyrrel.register_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='gui')
			Register module <gui>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=ide, module_name=gui)

		Squyrrel.load_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='gui', load_classes=True)
			Load module <squyrrel.ide.gui>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=ide, module_name=gui), imported_module=<module 'squyrrel.ide.gui' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\ide\\gui.py'>)
				load classes of module squyrrel.ide.gui..
				loaded 0 classes in module module squyrrel.ide.gui
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='log_window')
			Register module <log_window>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=ide, module_name=log_window)

		Squyrrel.load_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='log_window', load_classes=True)
			Load module <squyrrel.ide.log_window>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=ide, module_name=log_window), imported_module=<module 'squyrrel.ide.log_window' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\ide\\log_window.py'>)
				load classes of module squyrrel.ide.log_window..
				Squyrrel.load_class(ModuleMeta(package=ide, module_name=log_window), 'LogWindow', <class 'squyrrel.ide.log_window.LogWindow'>)
					add class LogWindow
					-> (Squyrrel.load_class) ->: None

				Squyrrel.load_class(ModuleMeta(package=ide, module_name=log_window), 'LogWindowConfig', <class 'squyrrel.ide.log_window.LogWindowConfig'>)
					add class LogWindowConfig
					-> (Squyrrel.load_class) ->: None

				loaded 2 classes in module module squyrrel.ide.log_window
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='main')
			Register module <main>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=ide, module_name=main)

		Squyrrel.load_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='main', load_classes=True)
			Load module <squyrrel.ide.main>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=ide, module_name=main), imported_module=<module 'squyrrel.ide.main' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\ide\\main.py'>)
				load classes of module squyrrel.ide.main..
				Squyrrel.load_class(ModuleMeta(package=ide, module_name=main), 'App', <class 'squyrrel.ide.main.App'>)
					add class App
					-> (Squyrrel.load_class) ->: None

				loaded 1 classes in module module squyrrel.ide.main
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='shell')
			Register module <shell>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=ide, module_name=shell)

		Squyrrel.load_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='shell', load_classes=True)
			Load module <squyrrel.ide.shell>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=ide, module_name=shell), imported_module=<module 'squyrrel.ide.shell' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\ide\\shell.py'>)
				load classes of module squyrrel.ide.shell..
				loaded 0 classes in module module squyrrel.ide.shell
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='shell_window')
			Register module <shell_window>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=ide, module_name=shell_window)

		Squyrrel.load_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='shell_window', load_classes=True)
			Load module <squyrrel.ide.shell_window>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=ide, module_name=shell_window), imported_module=<module 'squyrrel.ide.shell_window' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\ide\\shell_window.py'>)
				load classes of module squyrrel.ide.shell_window..
				Squyrrel.load_class(ModuleMeta(package=ide, module_name=shell_window), 'ShellWindow', <class 'squyrrel.ide.shell_window.ShellWindow'>)
					add class ShellWindow
					-> (Squyrrel.load_class) ->: None

				Squyrrel.load_class(ModuleMeta(package=ide, module_name=shell_window), 'ShellWindowConfig', <class 'squyrrel.ide.shell_window.ShellWindowConfig'>)
					add class ShellWindowConfig
					-> (Squyrrel.load_class) ->: None

				loaded 2 classes in module module squyrrel.ide.shell_window
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='windows')
			Register module <windows>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=ide, module_name=windows)

		Squyrrel.load_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='windows', load_classes=True)
			Load module <squyrrel.ide.windows>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=ide, module_name=windows), imported_module=<module 'squyrrel.ide.windows' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\ide\\windows.py'>)
				load classes of module squyrrel.ide.windows..
				loaded 0 classes in module module squyrrel.ide.windows
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='__init__')
			Register module <__init__>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=ide, module_name=__init__)

		Squyrrel.load_module(PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide), module_name='__init__', load_classes=True)
			Load module <squyrrel.ide.__init__>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=ide, module_name=__init__), imported_module=<module 'squyrrel.ide.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\ide\\__init__.py'>)
				load classes of module squyrrel.ide.__init__..
				loaded 0 classes in module module squyrrel.ide.__init__
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Inspecting subdir __pycache__ ..
		Squyrrel.register_package('squyrrel\\ide\\__pycache__')
			Register package/dir <squyrrel\ide\__pycache__>..
			Squyrrel.get_full_package_path('squyrrel\\ide\\__pycache__')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\ide\\__pycache__'

			Squyrrel._register_package_filter('__pycache__')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir __pycache__
			Full path: c:\users\lothar\passion\squyrrel\squyrrel\ide\__pycache__
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide\__pycache__, relative_path=squyrrel\ide\__pycache__, import_string=squyrrel.ide.__pycache__)

		Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide\__pycache__, relative_path=squyrrel\ide\__pycache__, import_string=squyrrel.ide.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide\__pycache__, relative_path=squyrrel\ide\__pycache__, import_string=squyrrel.ide.__pycache__))
				-> (Squyrrel.inspect_directory) ->: ([], [])

			is package (contains __init__.py): False
			Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide\__pycache__, relative_path=squyrrel\ide\__pycache__, import_string=squyrrel.ide.__pycache__))
				-> (Squyrrel._load_package_filter) ->: True

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide\__pycache__, relative_path=squyrrel\ide\__pycache__, import_string=squyrrel.ide.__pycache__)

		-> (Squyrrel.load_package) ->: PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide)

	Add subpackage ide to package squyrrel
	Inspecting subdir management ..
	Squyrrel.register_package('squyrrel\\management')
		Register package/dir <squyrrel\management>..
		Squyrrel.get_full_package_path('squyrrel\\management')
			-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\management'

		Squyrrel._register_package_filter('management')
			-> (Squyrrel._register_package_filter) ->: True

		Successfully registered package/dir management
		Full path: c:\users\lothar\passion\squyrrel\squyrrel\management
		-> (Squyrrel.register_package) ->: PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management)

	Squyrrel.load_package(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
		Squyrrel.inspect_directory(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management))
			-> (Squyrrel.inspect_directory) ->: (['base', 'commands', 'command_manager', 'context', 'exceptions', 'signals', '__init__'], ['__pycache__'])

		is package (contains __init__.py): True
		Squyrrel._load_package_filter(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management))
			-> (Squyrrel._load_package_filter) ->: True

		Squyrrel.register_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='base')
			Register module <base>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=management, module_name=base)

		Squyrrel.load_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='base', load_classes=True)
			Load module <squyrrel.management.base>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=management, module_name=base), imported_module=<module 'squyrrel.management.base' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\management\\base.py'>)
				load classes of module squyrrel.management.base..
				Squyrrel.load_class(ModuleMeta(package=management, module_name=base), 'BaseCommand', <class 'squyrrel.management.base.BaseCommand'>)
					add class BaseCommand
					-> (Squyrrel.load_class) ->: None

				Squyrrel.load_class(ModuleMeta(package=management, module_name=base), 'CommandError', <class 'squyrrel.management.base.CommandError'>)
					add class CommandError
					-> (Squyrrel.load_class) ->: None

				Squyrrel.load_class(ModuleMeta(package=management, module_name=base), 'CommandParser', <class 'squyrrel.management.base.CommandParser'>)
					add class CommandParser
					-> (Squyrrel.load_class) ->: None

				loaded 3 classes in module module squyrrel.management.base
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='commands')
			Register module <commands>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=management, module_name=commands)

		Squyrrel.load_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='commands', load_classes=True)
			Load module <squyrrel.management.commands>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=management, module_name=commands), imported_module=<module 'squyrrel.management.commands' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\management\\commands.py'>)
				load classes of module squyrrel.management.commands..
				Squyrrel.load_class(ModuleMeta(package=management, module_name=commands), 'ClassInfoCmd', <class 'squyrrel.management.commands.ClassInfoCmd'>)
					add class ClassInfoCmd
					-> (Squyrrel.load_class) ->: None

				Squyrrel.load_class(ModuleMeta(package=management, module_name=commands), 'HelpCmd', <class 'squyrrel.management.commands.HelpCmd'>)
					add class HelpCmd
					-> (Squyrrel.load_class) ->: None

				Squyrrel.load_class(ModuleMeta(package=management, module_name=commands), 'ListPackagesCmd', <class 'squyrrel.management.commands.ListPackagesCmd'>)
					add class ListPackagesCmd
					-> (Squyrrel.load_class) ->: None

				Squyrrel.load_class(ModuleMeta(package=management, module_name=commands), 'LoadPackageCmd', <class 'squyrrel.management.commands.LoadPackageCmd'>)
					add class LoadPackageCmd
					-> (Squyrrel.load_class) ->: None

				loaded 4 classes in module module squyrrel.management.commands
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='command_manager')
			Register module <command_manager>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=management, module_name=command_manager)

		Squyrrel.load_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='command_manager', load_classes=True)
			Load module <squyrrel.management.command_manager>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=management, module_name=command_manager), imported_module=<module 'squyrrel.management.command_manager' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\management\\command_manager.py'>)
				load classes of module squyrrel.management.command_manager..
				Squyrrel.load_class(ModuleMeta(package=management, module_name=command_manager), 'CommandManager', <class 'squyrrel.management.command_manager.CommandManager'>)
					add class CommandManager
					-> (Squyrrel.load_class) ->: None

				loaded 1 classes in module module squyrrel.management.command_manager
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='context')
			Register module <context>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=management, module_name=context)

		Squyrrel.load_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='context', load_classes=True)
			Load module <squyrrel.management.context>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=management, module_name=context), imported_module=<module 'squyrrel.management.context' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\management\\context.py'>)
				load classes of module squyrrel.management.context..
				Squyrrel.load_class(ModuleMeta(package=management, module_name=context), 'CmdContext', <class 'squyrrel.management.context.CmdContext'>)
					add class CmdContext
					-> (Squyrrel.load_class) ->: None

				loaded 1 classes in module module squyrrel.management.context
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='exceptions')
			Register module <exceptions>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=management, module_name=exceptions)

		Squyrrel.load_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='exceptions', load_classes=True)
			Load module <squyrrel.management.exceptions>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=management, module_name=exceptions), imported_module=<module 'squyrrel.management.exceptions' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\management\\exceptions.py'>)
				load classes of module squyrrel.management.exceptions..
				Squyrrel.load_class(ModuleMeta(package=management, module_name=exceptions), 'ArgumentParserException', <class 'squyrrel.management.exceptions.ArgumentParserException'>)
					add class ArgumentParserException
					-> (Squyrrel.load_class) ->: None

				loaded 1 classes in module module squyrrel.management.exceptions
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='signals')
			Register module <signals>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=management, module_name=signals)

		Squyrrel.load_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='signals', load_classes=True)
			Load module <squyrrel.management.signals>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=management, module_name=signals), imported_module=<module 'squyrrel.management.signals' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\management\\signals.py'>)
				load classes of module squyrrel.management.signals..
				loaded 0 classes in module module squyrrel.management.signals
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='__init__')
			Register module <__init__>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=management, module_name=__init__)

		Squyrrel.load_module(PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management), module_name='__init__', load_classes=True)
			Load module <squyrrel.management.__init__>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=management, module_name=__init__), imported_module=<module 'squyrrel.management.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\management\\__init__.py'>)
				load classes of module squyrrel.management.__init__..
				loaded 0 classes in module module squyrrel.management.__init__
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Inspecting subdir __pycache__ ..
		Squyrrel.register_package('squyrrel\\management\\__pycache__')
			Register package/dir <squyrrel\management\__pycache__>..
			Squyrrel.get_full_package_path('squyrrel\\management\\__pycache__')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\management\\__pycache__'

			Squyrrel._register_package_filter('__pycache__')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir __pycache__
			Full path: c:\users\lothar\passion\squyrrel\squyrrel\management\__pycache__
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management\__pycache__, relative_path=squyrrel\management\__pycache__, import_string=squyrrel.management.__pycache__)

		Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management\__pycache__, relative_path=squyrrel\management\__pycache__, import_string=squyrrel.management.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management\__pycache__, relative_path=squyrrel\management\__pycache__, import_string=squyrrel.management.__pycache__))
				-> (Squyrrel.inspect_directory) ->: ([], [])

			is package (contains __init__.py): False
			Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management\__pycache__, relative_path=squyrrel\management\__pycache__, import_string=squyrrel.management.__pycache__))
				-> (Squyrrel._load_package_filter) ->: True

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management\__pycache__, relative_path=squyrrel\management\__pycache__, import_string=squyrrel.management.__pycache__)

		-> (Squyrrel.load_package) ->: PackageMeta(package_name=management, package_path=c:\users\lothar\passion\squyrrel\squyrrel\management, relative_path=squyrrel\management, import_string=squyrrel.management)

	Add subpackage management to package squyrrel
	Inspecting subdir sql ..
	Squyrrel.register_package('squyrrel\\sql')
		Register package/dir <squyrrel\sql>..
		Squyrrel.get_full_package_path('squyrrel\\sql')
			-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\sql'

		Squyrrel._register_package_filter('sql')
			-> (Squyrrel._register_package_filter) ->: False

		Package sql did not pass filter
		-> (Squyrrel.register_package) ->: PackageMeta(package_name=sql, package_path=c:\users\lothar\passion\squyrrel\squyrrel\sql, relative_path=squyrrel\sql, import_string=squyrrel.sql)

	Inspecting subdir __pycache__ ..
	Squyrrel.register_package('squyrrel\\__pycache__')
		Register package/dir <squyrrel\__pycache__>..
		Squyrrel.get_full_package_path('squyrrel\\__pycache__')
			-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\__pycache__'

		Squyrrel._register_package_filter('__pycache__')
			-> (Squyrrel._register_package_filter) ->: True

		Successfully registered package/dir __pycache__
		Full path: c:\users\lothar\passion\squyrrel\squyrrel\__pycache__
		-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\__pycache__, relative_path=squyrrel\__pycache__, import_string=squyrrel.__pycache__)

	Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\__pycache__, relative_path=squyrrel\__pycache__, import_string=squyrrel.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
		Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\__pycache__, relative_path=squyrrel\__pycache__, import_string=squyrrel.__pycache__))
			-> (Squyrrel.inspect_directory) ->: ([], [])

		is package (contains __init__.py): False
		Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\__pycache__, relative_path=squyrrel\__pycache__, import_string=squyrrel.__pycache__))
			-> (Squyrrel._load_package_filter) ->: True

		-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel\__pycache__, relative_path=squyrrel\__pycache__, import_string=squyrrel.__pycache__)

	-> (Squyrrel.load_package) ->: PackageMeta(package_name=squyrrel, package_path=c:\users\lothar\passion\squyrrel\squyrrel, relative_path=squyrrel, import_string=squyrrel)

Squyrrel.build_context()
	-> (Squyrrel.build_context) ->: None

Squyrrel.register_and_load_package('squyrrel/gui')
	Squyrrel.register_package('squyrrel/gui')
		Register package/dir <squyrrel/gui>..
		Squyrrel.get_full_package_path('squyrrel/gui')
			-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel/gui'

		Squyrrel._register_package_filter('gui')
			-> (Squyrrel._register_package_filter) ->: True

		Successfully registered package/dir gui
		Full path: c:\users\lothar\passion\squyrrel\squyrrel/gui
		-> (Squyrrel.register_package) ->: PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui, relative_path=squyrrel/gui, import_string=squyrrel.gui)

	Squyrrel.load_package(PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui, relative_path=squyrrel/gui, import_string=squyrrel.gui))
		Squyrrel.inspect_directory(PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui, relative_path=squyrrel/gui, import_string=squyrrel.gui))
			-> (Squyrrel.inspect_directory) ->: (['signals', '__init__'], ['decorators', 'widgets', 'windows', '__pycache__'])

		is package (contains __init__.py): True
		Squyrrel._load_package_filter(PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui, relative_path=squyrrel/gui, import_string=squyrrel.gui))
			-> (Squyrrel._load_package_filter) ->: True

		Squyrrel.register_module(PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui, relative_path=squyrrel/gui, import_string=squyrrel.gui), module_name='signals')
			Register module <signals>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=gui, module_name=signals)

		Squyrrel.load_module(PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui, relative_path=squyrrel/gui, import_string=squyrrel.gui), module_name='signals', load_classes=True)
			Load module <squyrrel.gui.signals>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=gui, module_name=signals), imported_module=<module 'squyrrel.gui.signals' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\gui\\signals.py'>)
				load classes of module squyrrel.gui.signals..
				loaded 0 classes in module module squyrrel.gui.signals
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Squyrrel.register_module(PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui, relative_path=squyrrel/gui, import_string=squyrrel.gui), module_name='__init__')
			Register module <__init__>..
			-> (Squyrrel.register_module) ->: ModuleMeta(package=gui, module_name=__init__)

		Squyrrel.load_module(PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui, relative_path=squyrrel/gui, import_string=squyrrel.gui), module_name='__init__', load_classes=True)
			Load module <squyrrel.gui.__init__>
			Squyrrel.load_module_classes(module_meta=ModuleMeta(package=gui, module_name=__init__), imported_module=<module 'squyrrel.gui.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\gui\\__init__.py'>)
				load classes of module squyrrel.gui.__init__..
				loaded 0 classes in module module squyrrel.gui.__init__
				-> (Squyrrel.load_module_classes) ->: None

			-> (Squyrrel.load_module) ->: None

		Inspecting subdir decorators ..
		Squyrrel.register_package('squyrrel/gui\\decorators')
			Register package/dir <squyrrel/gui\decorators>..
			Squyrrel.get_full_package_path('squyrrel/gui\\decorators')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel/gui\\decorators'

			Squyrrel._register_package_filter('decorators')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir decorators
			Full path: c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=decorators, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators, relative_path=squyrrel/gui\decorators, import_string=squyrrel.gui.decorators)

		Squyrrel.load_package(PackageMeta(package_name=decorators, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators, relative_path=squyrrel/gui\decorators, import_string=squyrrel.gui.decorators), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=decorators, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators, relative_path=squyrrel/gui\decorators, import_string=squyrrel.gui.decorators))
				-> (Squyrrel.inspect_directory) ->: (['config', '__init__'], ['__pycache__'])

			is package (contains __init__.py): True
			Squyrrel._load_package_filter(PackageMeta(package_name=decorators, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators, relative_path=squyrrel/gui\decorators, import_string=squyrrel.gui.decorators))
				-> (Squyrrel._load_package_filter) ->: True

			Squyrrel.register_module(PackageMeta(package_name=decorators, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators, relative_path=squyrrel/gui\decorators, import_string=squyrrel.gui.decorators), module_name='config')
				Register module <config>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=decorators, module_name=config)

			Squyrrel.load_module(PackageMeta(package_name=decorators, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators, relative_path=squyrrel/gui\decorators, import_string=squyrrel.gui.decorators), module_name='config', load_classes=True)
				Load module <squyrrel.gui.decorators.config>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=decorators, module_name=config), imported_module=<module 'squyrrel.gui.decorators.config' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\gui\\decorators\\config.py'>)
					load classes of module squyrrel.gui.decorators.config..
					loaded 0 classes in module module squyrrel.gui.decorators.config
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=decorators, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators, relative_path=squyrrel/gui\decorators, import_string=squyrrel.gui.decorators), module_name='__init__')
				Register module <__init__>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=decorators, module_name=__init__)

			Squyrrel.load_module(PackageMeta(package_name=decorators, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators, relative_path=squyrrel/gui\decorators, import_string=squyrrel.gui.decorators), module_name='__init__', load_classes=True)
				Load module <squyrrel.gui.decorators.__init__>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=decorators, module_name=__init__), imported_module=<module 'squyrrel.gui.decorators.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\gui\\decorators\\__init__.py'>)
					load classes of module squyrrel.gui.decorators.__init__..
					loaded 0 classes in module module squyrrel.gui.decorators.__init__
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Inspecting subdir __pycache__ ..
			Squyrrel.register_package('squyrrel/gui\\decorators\\__pycache__')
				Register package/dir <squyrrel/gui\decorators\__pycache__>..
				Squyrrel.get_full_package_path('squyrrel/gui\\decorators\\__pycache__')
					-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel/gui\\decorators\\__pycache__'

				Squyrrel._register_package_filter('__pycache__')
					-> (Squyrrel._register_package_filter) ->: True

				Successfully registered package/dir __pycache__
				Full path: c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators\__pycache__
				-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators\__pycache__, relative_path=squyrrel/gui\decorators\__pycache__, import_string=squyrrel.gui.decorators.__pycache__)

			Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators\__pycache__, relative_path=squyrrel/gui\decorators\__pycache__, import_string=squyrrel.gui.decorators.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
				Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators\__pycache__, relative_path=squyrrel/gui\decorators\__pycache__, import_string=squyrrel.gui.decorators.__pycache__))
					-> (Squyrrel.inspect_directory) ->: ([], [])

				is package (contains __init__.py): False
				Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators\__pycache__, relative_path=squyrrel/gui\decorators\__pycache__, import_string=squyrrel.gui.decorators.__pycache__))
					-> (Squyrrel._load_package_filter) ->: True

				-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators\__pycache__, relative_path=squyrrel/gui\decorators\__pycache__, import_string=squyrrel.gui.decorators.__pycache__)

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=decorators, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\decorators, relative_path=squyrrel/gui\decorators, import_string=squyrrel.gui.decorators)

		Add subpackage decorators to package gui
		Inspecting subdir widgets ..
		Squyrrel.register_package('squyrrel/gui\\widgets')
			Register package/dir <squyrrel/gui\widgets>..
			Squyrrel.get_full_package_path('squyrrel/gui\\widgets')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel/gui\\widgets'

			Squyrrel._register_package_filter('widgets')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir widgets
			Full path: c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=widgets, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets, relative_path=squyrrel/gui\widgets, import_string=squyrrel.gui.widgets)

		Squyrrel.load_package(PackageMeta(package_name=widgets, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets, relative_path=squyrrel/gui\widgets, import_string=squyrrel.gui.widgets), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=widgets, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets, relative_path=squyrrel/gui\widgets, import_string=squyrrel.gui.widgets))
				-> (Squyrrel.inspect_directory) ->: (['smarttext', 'smarttext_defaultconfig', '__init__'], ['themes', '__pycache__'])

			is package (contains __init__.py): True
			Squyrrel._load_package_filter(PackageMeta(package_name=widgets, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets, relative_path=squyrrel/gui\widgets, import_string=squyrrel.gui.widgets))
				-> (Squyrrel._load_package_filter) ->: True

			Squyrrel.register_module(PackageMeta(package_name=widgets, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets, relative_path=squyrrel/gui\widgets, import_string=squyrrel.gui.widgets), module_name='smarttext')
				Register module <smarttext>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=widgets, module_name=smarttext)

			Squyrrel.load_module(PackageMeta(package_name=widgets, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets, relative_path=squyrrel/gui\widgets, import_string=squyrrel.gui.widgets), module_name='smarttext', load_classes=True)
				Load module <squyrrel.gui.widgets.smarttext>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=widgets, module_name=smarttext), imported_module=<module 'squyrrel.gui.widgets.smarttext' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\gui\\widgets\\smarttext.py'>)
					load classes of module squyrrel.gui.widgets.smarttext..
					Squyrrel.load_class(ModuleMeta(package=widgets, module_name=smarttext), 'CustomText', <class 'squyrrel.gui.widgets.smarttext.CustomText'>)
						add class CustomText
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=widgets, module_name=smarttext), 'SmartText', <class 'squyrrel.gui.widgets.smarttext.SmartText'>)
						add class SmartText
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=widgets, module_name=smarttext), 'TextLineNumbers', <class 'squyrrel.gui.widgets.smarttext.TextLineNumbers'>)
						add class TextLineNumbers
						-> (Squyrrel.load_class) ->: None

					loaded 3 classes in module module squyrrel.gui.widgets.smarttext
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=widgets, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets, relative_path=squyrrel/gui\widgets, import_string=squyrrel.gui.widgets), module_name='smarttext_defaultconfig')
				Register module <smarttext_defaultconfig>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=widgets, module_name=smarttext_defaultconfig)

			Squyrrel.load_module(PackageMeta(package_name=widgets, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets, relative_path=squyrrel/gui\widgets, import_string=squyrrel.gui.widgets), module_name='smarttext_defaultconfig', load_classes=True)
				Load module <squyrrel.gui.widgets.smarttext_defaultconfig>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=widgets, module_name=smarttext_defaultconfig), imported_module=<module 'squyrrel.gui.widgets.smarttext_defaultconfig' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\gui\\widgets\\smarttext_defaultconfig.py'>)
					load classes of module squyrrel.gui.widgets.smarttext_defaultconfig..
					Squyrrel.load_class(ModuleMeta(package=widgets, module_name=smarttext_defaultconfig), 'SmartTextDefaultConfig', <class 'squyrrel.gui.widgets.smarttext_defaultconfig.SmartTextDefaultConfig'>)
						add class SmartTextDefaultConfig
						-> (Squyrrel.load_class) ->: None

					loaded 1 classes in module module squyrrel.gui.widgets.smarttext_defaultconfig
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=widgets, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets, relative_path=squyrrel/gui\widgets, import_string=squyrrel.gui.widgets), module_name='__init__')
				Register module <__init__>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=widgets, module_name=__init__)

			Squyrrel.load_module(PackageMeta(package_name=widgets, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets, relative_path=squyrrel/gui\widgets, import_string=squyrrel.gui.widgets), module_name='__init__', load_classes=True)
				Load module <squyrrel.gui.widgets.__init__>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=widgets, module_name=__init__), imported_module=<module 'squyrrel.gui.widgets.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\gui\\widgets\\__init__.py'>)
					load classes of module squyrrel.gui.widgets.__init__..
					loaded 0 classes in module module squyrrel.gui.widgets.__init__
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Inspecting subdir themes ..
			Squyrrel.register_package('squyrrel/gui\\widgets\\themes')
				Register package/dir <squyrrel/gui\widgets\themes>..
				Squyrrel.get_full_package_path('squyrrel/gui\\widgets\\themes')
					-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel/gui\\widgets\\themes'

				Squyrrel._register_package_filter('themes')
					-> (Squyrrel._register_package_filter) ->: True

				Successfully registered package/dir themes
				Full path: c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets\themes
				-> (Squyrrel.register_package) ->: PackageMeta(package_name=themes, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets\themes, relative_path=squyrrel/gui\widgets\themes, import_string=squyrrel.gui.widgets.themes)

			Squyrrel.load_package(PackageMeta(package_name=themes, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets\themes, relative_path=squyrrel/gui\widgets\themes, import_string=squyrrel.gui.widgets.themes), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
				Squyrrel.inspect_directory(PackageMeta(package_name=themes, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets\themes, relative_path=squyrrel/gui\widgets\themes, import_string=squyrrel.gui.widgets.themes))
					-> (Squyrrel.inspect_directory) ->: ([], [])

				is package (contains __init__.py): False
				Squyrrel._load_package_filter(PackageMeta(package_name=themes, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets\themes, relative_path=squyrrel/gui\widgets\themes, import_string=squyrrel.gui.widgets.themes))
					-> (Squyrrel._load_package_filter) ->: True

				-> (Squyrrel.load_package) ->: PackageMeta(package_name=themes, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets\themes, relative_path=squyrrel/gui\widgets\themes, import_string=squyrrel.gui.widgets.themes)

			Inspecting subdir __pycache__ ..
			Squyrrel.register_package('squyrrel/gui\\widgets\\__pycache__')
				Register package/dir <squyrrel/gui\widgets\__pycache__>..
				Squyrrel.get_full_package_path('squyrrel/gui\\widgets\\__pycache__')
					-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel/gui\\widgets\\__pycache__'

				Squyrrel._register_package_filter('__pycache__')
					-> (Squyrrel._register_package_filter) ->: True

				Successfully registered package/dir __pycache__
				Full path: c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets\__pycache__
				-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets\__pycache__, relative_path=squyrrel/gui\widgets\__pycache__, import_string=squyrrel.gui.widgets.__pycache__)

			Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets\__pycache__, relative_path=squyrrel/gui\widgets\__pycache__, import_string=squyrrel.gui.widgets.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
				Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets\__pycache__, relative_path=squyrrel/gui\widgets\__pycache__, import_string=squyrrel.gui.widgets.__pycache__))
					-> (Squyrrel.inspect_directory) ->: ([], [])

				is package (contains __init__.py): False
				Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets\__pycache__, relative_path=squyrrel/gui\widgets\__pycache__, import_string=squyrrel.gui.widgets.__pycache__))
					-> (Squyrrel._load_package_filter) ->: True

				-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets\__pycache__, relative_path=squyrrel/gui\widgets\__pycache__, import_string=squyrrel.gui.widgets.__pycache__)

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=widgets, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\widgets, relative_path=squyrrel/gui\widgets, import_string=squyrrel.gui.widgets)

		Add subpackage widgets to package gui
		Inspecting subdir windows ..
		Squyrrel.register_package('squyrrel/gui\\windows')
			Register package/dir <squyrrel/gui\windows>..
			Squyrrel.get_full_package_path('squyrrel/gui\\windows')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel/gui\\windows'

			Squyrrel._register_package_filter('windows')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir windows
			Full path: c:\users\lothar\passion\squyrrel\squyrrel/gui\windows
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=windows, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows, relative_path=squyrrel/gui\windows, import_string=squyrrel.gui.windows)

		Squyrrel.load_package(PackageMeta(package_name=windows, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows, relative_path=squyrrel/gui\windows, import_string=squyrrel.gui.windows), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=windows, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows, relative_path=squyrrel/gui\windows, import_string=squyrrel.gui.windows))
				-> (Squyrrel.inspect_directory) ->: (['base', '__init__'], ['__pycache__'])

			is package (contains __init__.py): True
			Squyrrel._load_package_filter(PackageMeta(package_name=windows, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows, relative_path=squyrrel/gui\windows, import_string=squyrrel.gui.windows))
				-> (Squyrrel._load_package_filter) ->: True

			Squyrrel.register_module(PackageMeta(package_name=windows, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows, relative_path=squyrrel/gui\windows, import_string=squyrrel.gui.windows), module_name='base')
				Register module <base>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=windows, module_name=base)

			Squyrrel.load_module(PackageMeta(package_name=windows, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows, relative_path=squyrrel/gui\windows, import_string=squyrrel.gui.windows), module_name='base', load_classes=True)
				Load module <squyrrel.gui.windows.base>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=windows, module_name=base), imported_module=<module 'squyrrel.gui.windows.base' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\gui\\windows\\base.py'>)
					load classes of module squyrrel.gui.windows.base..
					Squyrrel.load_class(ModuleMeta(package=windows, module_name=base), 'MainWindow', <class 'squyrrel.gui.windows.base.MainWindow'>)
						add class MainWindow
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=windows, module_name=base), 'TextMainWindow', <class 'squyrrel.gui.windows.base.TextMainWindow'>)
						add class TextMainWindow
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=windows, module_name=base), 'TextWindow', <class 'squyrrel.gui.windows.base.TextWindow'>)
						add class TextWindow
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=windows, module_name=base), 'TextWindowBase', <class 'squyrrel.gui.windows.base.TextWindowBase'>)
						add class TextWindowBase
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=windows, module_name=base), 'WindowBase', <class 'squyrrel.gui.windows.base.WindowBase'>)
						add class WindowBase
						-> (Squyrrel.load_class) ->: None

					Squyrrel.load_class(ModuleMeta(package=windows, module_name=base), 'WindowBaseDefaultConfig', <class 'squyrrel.gui.windows.base.WindowBaseDefaultConfig'>)
						add class WindowBaseDefaultConfig
						-> (Squyrrel.load_class) ->: None

					loaded 6 classes in module module squyrrel.gui.windows.base
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Squyrrel.register_module(PackageMeta(package_name=windows, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows, relative_path=squyrrel/gui\windows, import_string=squyrrel.gui.windows), module_name='__init__')
				Register module <__init__>..
				-> (Squyrrel.register_module) ->: ModuleMeta(package=windows, module_name=__init__)

			Squyrrel.load_module(PackageMeta(package_name=windows, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows, relative_path=squyrrel/gui\windows, import_string=squyrrel.gui.windows), module_name='__init__', load_classes=True)
				Load module <squyrrel.gui.windows.__init__>
				Squyrrel.load_module_classes(module_meta=ModuleMeta(package=windows, module_name=__init__), imported_module=<module 'squyrrel.gui.windows.__init__' from 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel\\gui\\windows\\__init__.py'>)
					load classes of module squyrrel.gui.windows.__init__..
					loaded 0 classes in module module squyrrel.gui.windows.__init__
					-> (Squyrrel.load_module_classes) ->: None

				-> (Squyrrel.load_module) ->: None

			Inspecting subdir __pycache__ ..
			Squyrrel.register_package('squyrrel/gui\\windows\\__pycache__')
				Register package/dir <squyrrel/gui\windows\__pycache__>..
				Squyrrel.get_full_package_path('squyrrel/gui\\windows\\__pycache__')
					-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel/gui\\windows\\__pycache__'

				Squyrrel._register_package_filter('__pycache__')
					-> (Squyrrel._register_package_filter) ->: True

				Successfully registered package/dir __pycache__
				Full path: c:\users\lothar\passion\squyrrel\squyrrel/gui\windows\__pycache__
				-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows\__pycache__, relative_path=squyrrel/gui\windows\__pycache__, import_string=squyrrel.gui.windows.__pycache__)

			Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows\__pycache__, relative_path=squyrrel/gui\windows\__pycache__, import_string=squyrrel.gui.windows.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
				Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows\__pycache__, relative_path=squyrrel/gui\windows\__pycache__, import_string=squyrrel.gui.windows.__pycache__))
					-> (Squyrrel.inspect_directory) ->: ([], [])

				is package (contains __init__.py): False
				Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows\__pycache__, relative_path=squyrrel/gui\windows\__pycache__, import_string=squyrrel.gui.windows.__pycache__))
					-> (Squyrrel._load_package_filter) ->: True

				-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows\__pycache__, relative_path=squyrrel/gui\windows\__pycache__, import_string=squyrrel.gui.windows.__pycache__)

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=windows, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\windows, relative_path=squyrrel/gui\windows, import_string=squyrrel.gui.windows)

		Add subpackage windows to package gui
		Inspecting subdir __pycache__ ..
		Squyrrel.register_package('squyrrel/gui\\__pycache__')
			Register package/dir <squyrrel/gui\__pycache__>..
			Squyrrel.get_full_package_path('squyrrel/gui\\__pycache__')
				-> (Squyrrel.get_full_package_path) ->: 'c:\\users\\lothar\\passion\\squyrrel\\squyrrel/gui\\__pycache__'

			Squyrrel._register_package_filter('__pycache__')
				-> (Squyrrel._register_package_filter) ->: True

			Successfully registered package/dir __pycache__
			Full path: c:\users\lothar\passion\squyrrel\squyrrel/gui\__pycache__
			-> (Squyrrel.register_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\__pycache__, relative_path=squyrrel/gui\__pycache__, import_string=squyrrel.gui.__pycache__)

		Squyrrel.load_package(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\__pycache__, relative_path=squyrrel/gui\__pycache__, import_string=squyrrel.gui.__pycache__), ignore_rotten_modules=False, load_classes=True, load_subpackages=True)
			Squyrrel.inspect_directory(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\__pycache__, relative_path=squyrrel/gui\__pycache__, import_string=squyrrel.gui.__pycache__))
				-> (Squyrrel.inspect_directory) ->: ([], [])

			is package (contains __init__.py): False
			Squyrrel._load_package_filter(PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\__pycache__, relative_path=squyrrel/gui\__pycache__, import_string=squyrrel.gui.__pycache__))
				-> (Squyrrel._load_package_filter) ->: True

			-> (Squyrrel.load_package) ->: PackageMeta(package_name=__pycache__, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui\__pycache__, relative_path=squyrrel/gui\__pycache__, import_string=squyrrel.gui.__pycache__)

		-> (Squyrrel.load_package) ->: PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui, relative_path=squyrrel/gui, import_string=squyrrel.gui)

	-> (Squyrrel.register_and_load_package) ->: PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui, relative_path=squyrrel/gui, import_string=squyrrel.gui)

Squyrrel.get_package('ide')
	-> (Squyrrel.get_package) ->: PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide)

Squyrrel.create_instance(<squyrrel.core.registry.meta.ClassMeta object at 0x022BB110>, {'init_args': [None], 'init_kwargs': None, 'after_init_kwargs': {'window_title': 'Squyrrel CLI'}})
	
Create_instance of class <ShellWindow>
	Squyrrel.get_class_config(class_meta=<squyrrel.core.registry.meta.ClassMeta object at 0x022BB110>)
		-> (Squyrrel.get_class_config) ->: <class 'squyrrel.ide.shell_window.ShellWindowConfig'>

	Squyrrel.apply_init_kwargs_hook(None, config_cls=<class 'squyrrel.ide.shell_window.ShellWindowConfig'>)
		-> (Squyrrel.apply_init_kwargs_hook) ->: None

	Squyrrel.get_package('gui')
		-> (Squyrrel.get_package) ->: PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui, relative_path=squyrrel/gui, import_string=squyrrel.gui)

	Squyrrel.create_instance(<squyrrel.core.registry.meta.ClassMeta object at 0x022EEC70>, {'init_args': [<squyrrel.ide.shell_window.ShellWindow object .>], 'init_kwargs': None, 'after_init_kwargs': None})
		
Create_instance of class <SmartText>
		Squyrrel.get_class_config(class_meta=<squyrrel.core.registry.meta.ClassMeta object at 0x022EEC70>)
			-> (Squyrrel.get_class_config) ->: <class 'squyrrel.gui.widgets.smarttext_defaultconfig.SmartTextDefaultConfig'>

		Squyrrel.apply_init_kwargs_hook(None, config_cls=<class 'squyrrel.gui.widgets.smarttext_defaultconfig.SmartTextDefaultConfig'>)
			-> (Squyrrel.apply_init_kwargs_hook) ->: None

		config class: SmartTextDefaultConfig
		Squyrrel.config_instance(instance=<squyrrel.gui.widgets.smarttext.SmartText object .!smarttext>, cls=<class 'squyrrel.gui.widgets.smarttext.SmartText'>, config_cls=<class 'squyrrel.gui.widgets.smarttext_defaultconfig.SmartTextDefaultConfig'>, params={'init_args': [<squyrrel.ide.shell_window.ShellWindow object .>], 'init_kwargs': None, 'after_init_kwargs': None})
			After init hook for SmartText: IConfigRegistry.setup_logging
			Setup logging of SmartText methods..
			After init hook for SmartText: IConfigRegistry.config
			SmartText.apply_theme({'font': ['courier', 9, 'normal'], 'bg': '#131819', 'fg': '#c4cfd3', 'active_line_bg': 'gray18', 'sel_bg': 'gray37', 'sel_fg': '#c4cfd3', 'line_numbers_bg': '#131819', 'line_numbers_fg': '#c4cfd3', 'line_numbers_active_line_bg': 'gray18', 'line_numbers_sel_bg': 'gray37', 'cursor_bg': 'white', 'tags': {'error': {'foreground': 'red'}, 'call': {'foreground': '#2f44cc'}, 'gui_call': {'foreground': '#36c96c'}, 'signal': {'foreground': 'd63ddb'}}})
				SmartText.config_option('font', ['courier', 9, 'normal'])
					-> (SmartText.config_option) ->: None

				SmartText.config_option('bg', '#131819')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('fg', '#c4cfd3')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('active_line_bg', 'gray18')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('sel_bg', 'gray37')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('sel_fg', '#c4cfd3')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('line_numbers_bg', '#131819')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('line_numbers_fg', '#c4cfd3')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('line_numbers_active_line_bg', 'gray18')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('line_numbers_sel_bg', 'gray37')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('cursor_bg', 'white')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('tags', {'error': {'foreground': 'red'}, 'call': {'foreground': '#2f44cc'}, 'gui_call': {'foreground': '#36c96c'}, 'signal': {'foreground': 'd63ddb'}})
					-> (SmartText.config_option) ->: None

				-> (SmartText.apply_theme) ->: None

			-> (Squyrrel.config_instance) ->: None

		-> (Squyrrel.create_instance) ->: <squyrrel.gui.widgets.smarttext.SmartText object .!smarttext>

	config class: ShellWindowConfig
	Squyrrel.config_instance(instance=<squyrrel.ide.shell_window.ShellWindow object .>, cls=<class 'squyrrel.ide.shell_window.ShellWindow'>, config_cls=<class 'squyrrel.ide.shell_window.ShellWindowConfig'>, params={'init_args': [None], 'init_kwargs': None, 'after_init_kwargs': {'window_title': 'Squyrrel CLI'}})
		After init hook for ShellWindow: IConfigRegistry.config
		-> (Squyrrel.config_instance) ->: None

	-> (Squyrrel.create_instance) ->: <squyrrel.ide.shell_window.ShellWindow object .>

Squyrrel.get_package('ide')
	-> (Squyrrel.get_package) ->: PackageMeta(package_name=ide, package_path=c:\users\lothar\passion\squyrrel\squyrrel\ide, relative_path=squyrrel\ide, import_string=squyrrel.ide)

Squyrrel.create_instance(<squyrrel.core.registry.meta.ClassMeta object at 0x021299F0>, {'init_args': [<squyrrel.ide.shell_window.ShellWindow object .>], 'init_kwargs': None, 'after_init_kwargs': {'window_title': 'Squyrrel Log'}})
	
Create_instance of class <LogWindow>
	Squyrrel.get_class_config(class_meta=<squyrrel.core.registry.meta.ClassMeta object at 0x021299F0>)
		-> (Squyrrel.get_class_config) ->: <class 'squyrrel.ide.log_window.LogWindowConfig'>

	Squyrrel.apply_init_kwargs_hook(None, config_cls=<class 'squyrrel.ide.log_window.LogWindowConfig'>)
		-> (Squyrrel.apply_init_kwargs_hook) ->: None

	Squyrrel.get_package('gui')
		-> (Squyrrel.get_package) ->: PackageMeta(package_name=gui, package_path=c:\users\lothar\passion\squyrrel\squyrrel/gui, relative_path=squyrrel/gui, import_string=squyrrel.gui)

	Squyrrel.create_instance(<squyrrel.core.registry.meta.ClassMeta object at 0x022EEC70>, {'init_args': [<squyrrel.ide.log_window.LogWindow object .!logwindow>], 'init_kwargs': None, 'after_init_kwargs': None})
		
Create_instance of class <SmartText>
		Squyrrel.get_class_config(class_meta=<squyrrel.core.registry.meta.ClassMeta object at 0x022EEC70>)
			-> (Squyrrel.get_class_config) ->: <class 'squyrrel.gui.widgets.smarttext_defaultconfig.SmartTextDefaultConfig'>

		Squyrrel.apply_init_kwargs_hook(None, config_cls=<class 'squyrrel.gui.widgets.smarttext_defaultconfig.SmartTextDefaultConfig'>)
			-> (Squyrrel.apply_init_kwargs_hook) ->: None

		config class: SmartTextDefaultConfig
		Squyrrel.config_instance(instance=<squyrrel.gui.widgets.smarttext.SmartText object .!logwindow.!smarttext>, cls=<class 'squyrrel.gui.widgets.smarttext.SmartText'>, config_cls=<class 'squyrrel.gui.widgets.smarttext_defaultconfig.SmartTextDefaultConfig'>, params={'init_args': [<squyrrel.ide.log_window.LogWindow object .!logwindow>], 'init_kwargs': None, 'after_init_kwargs': None})
			After init hook for SmartText: IConfigRegistry.setup_logging
			Setup logging of SmartText methods..
			After init hook for SmartText: IConfigRegistry.config
			SmartText.apply_theme({'font': ['courier', 9, 'normal'], 'bg': '#131819', 'fg': '#c4cfd3', 'active_line_bg': 'gray18', 'sel_bg': 'gray37', 'sel_fg': '#c4cfd3', 'line_numbers_bg': '#131819', 'line_numbers_fg': '#c4cfd3', 'line_numbers_active_line_bg': 'gray18', 'line_numbers_sel_bg': 'gray37', 'cursor_bg': 'white', 'tags': {'error': {'foreground': 'red'}, 'call': {'foreground': '#2f44cc'}, 'gui_call': {'foreground': '#36c96c'}, 'signal': {'foreground': 'd63ddb'}}})
				SmartText.config_option('font', ['courier', 9, 'normal'])
					-> (SmartText.config_option) ->: None

				SmartText.config_option('bg', '#131819')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('fg', '#c4cfd3')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('active_line_bg', 'gray18')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('sel_bg', 'gray37')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('sel_fg', '#c4cfd3')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('line_numbers_bg', '#131819')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('line_numbers_fg', '#c4cfd3')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('line_numbers_active_line_bg', 'gray18')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('line_numbers_sel_bg', 'gray37')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('cursor_bg', 'white')
					-> (SmartText.config_option) ->: None

				SmartText.config_option('tags', {'error': {'foreground': 'red'}, 'call': {'foreground': '#2f44cc'}, 'gui_call': {'foreground': '#36c96c'}, 'signal': {'foreground': 'd63ddb'}})
					-> (SmartText.config_option) ->: None

				-> (SmartText.apply_theme) ->: None

			-> (Squyrrel.config_instance) ->: None

		-> (Squyrrel.create_instance) ->: <squyrrel.gui.widgets.smarttext.SmartText object .!logwindow.!smarttext>

	config class: LogWindowConfig
	Squyrrel.config_instance(instance=<squyrrel.ide.log_window.LogWindow object .!logwindow>, cls=<class 'squyrrel.ide.log_window.LogWindow'>, config_cls=<class 'squyrrel.ide.log_window.LogWindowConfig'>, params={'init_args': [<squyrrel.ide.shell_window.ShellWindow object .>], 'init_kwargs': None, 'after_init_kwargs': {'window_title': 'Squyrrel Log'}})
		After init hook for LogWindow: IConfigRegistry.config
		-> (Squyrrel.config_instance) ->: None

	-> (Squyrrel.create_instance) ->: <squyrrel.ide.log_window.LogWindow object .!logwindow>

